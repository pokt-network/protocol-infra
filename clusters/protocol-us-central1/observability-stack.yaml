apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: observability-vm
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://victoriametrics.github.io/helm-charts/
    chart: victoria-metrics-k8s-stack
    targetRevision: 0.25.16
    helm:
      values: |
        fullnameOverride: vm
        argocdReleaseOverride: observability-vm
        vmsingle:
          spec:
            retentionPeriod: "1"
            storage:
              resources:
                requests:
                  storage: 20Gi
              storageClassName: standard
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/auth-type: basic
              nginx.ingress.kubernetes.io/auth-secret: basic-auth
            hosts:
              - vm-usc1.poktroll.com
            tls:
              - secretName: "poktroll-wildcard-tls"
                hosts:
                  - vm-usc1.poktroll.com

        vmagent:
          spec:
            selectAllByDefault: true # all namespaces
            externalLabels:
              cluster: protocol-us-central1
              cloud_provider: gcp
              region: us-central1
              team: protocol

        vmalert:
          spec:
            externalLabels:
              cluster: protocol-us-central1
              cloud_provider: gcp
              region: us-central1
              team: protocol

        victoria-metrics-operator:
          operator:
            disable_prometheus_converter: false
            prometheus_converter_add_argocd_ignore_annotations: true

        # TODO: set `GF_AUTH_GITHUB_CLIENT_ID`, `GF_AUTH_GITHUB_CLIENT_SECRET`, via extra env mounts
        # TODO: add certificate
        grafana:
          adminPassword: initialPassword
          persistence:
            enabled: true
          deploymentStrategy:
            type: Recreate # We only run one so we need this
          envFromSecrets:
            - name: "github-auth-secrets"
              optional: false
          grafana.ini:
            server:
              domain: grafana.poktroll.com
              root_url: https://grafana.poktroll.com
            auth.github:
              role_attribute_path: contains(groups[*], '@pokt-network/engineering-executives') && 'Admin' || contains(groups[*], '@pokt-network/engineering-member') && 'Editor' || 'Viewer'
              enabled: true
              allow_sign_up: true
              scopes: user:email,read:org
              auth_url: https://github.com/login/oauth/authorize
              token_url: https://github.com/login/oauth/access_token
              api_url: https://api.github.com/user
              allowed_organizations: pokt-foundation pokt-network
            plugins:
              enabled: true
              allow_loading_unsigned_plugins: "victoriametrics-datasource"
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
            hosts:
              - grafana.poktroll.com
            tls:
              - secretName: poktroll-wildcard-tls
                hosts:
                - grafana.poktroll.com
          additionalDataSources:
            - name: Loki
              type: loki
              url: http://observability-loki:3100/
              access: proxy
          # datasources:
          #   datasources.yaml:
          #     apiVersion: 1
          #     datasources:
          #     - name: Loki
          #       type: loki
          #       url: http://observability-loki:3100/
          # sidecar:
          #   datasources:
          #     initDatasources: true
          #     enabled: true
          # extraInitContainers:
          # - name: "load-vm-ds-plugin"
          #   image: "curlimages/curl:7.85.0"
          #   command: [ "/bin/sh" ]
          #   workingDir: "/var/lib/grafana"
          #   securityContext:
          #     runAsUser: 472
          #     runAsNonRoot: true
          #     runAsGroup: 472
          #   args:
          #   - "-c"
          #   - |
          #     set -ex
          #     mkdir -p /var/lib/grafana/plugins/
          #     ver=$(curl -s https://api.github.com/repos/VictoriaMetrics/grafana-datasource/releases/latest | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | head -1)
          #     curl -L https://github.com/VictoriaMetrics/grafana-datasource/releases/download/$ver/victoriametrics-datasource-$ver.tar.gz -o /var/lib/grafana/plugins/plugin.tar.gz
          #     tar -xf /var/lib/grafana/plugins/plugin.tar.gz -C /var/lib/grafana/plugins/
          #     rm /var/lib/grafana/plugins/plugin.tar.gz
          #   volumeMounts:
          #     # For grafana-operator users, change `name: storage` to `name: grafana-data`
          #     - name: storage
          #       mountPath: /var/lib/grafana
  destination:
    server: https://kubernetes.default.svc
    namespace: observability
  syncPolicy:
    syncOptions:
      - Replace=true
    # automated: # Enables automated sync
    #   prune: false # Enables pruning of resources not tracked anymore
    #   selfHeal: false # Enables self-healing of out-of-sync resources
  ignoreDifferences:
    - group: cert-manager.io
      kind: Certificate
      jsonPointers:
        - /spec/duration
        - /spec/renewBefore

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: observability-loki
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki-stack
    targetRevision: 2.10.2
    helm:
      values: |
        loki:
          image:
            tag: 2.9.9
          persistence:
            enabled: true
            accessModes:
              - ReadWriteOnce
            size: 100Gi
        grafana:
          sidecar:
            datasources:
              enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: observability
  syncPolicy:
    syncOptions:
      - Replace=true
    # automated: # Enables automated sync
    #   prune: false # Enables pruning of resources not tracked anymore
    #   selfHeal: false # Enables self-healing of out-of-sync resources
  ignoreDifferences:
    - group: cert-manager.io
      kind: Certificate
      jsonPointers:
        - /spec/duration
        - /spec/renewBefore

# Didn't realize VL still doesn't have Grafana integration
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: observability-vl
#   namespace: argocd
# spec:
#   project: default
#   source:
#     repoURL: https://victoriametrics.github.io/helm-charts/
#     chart: victoria-logs-single
#     targetRevision: 0.3.4
#     helm:
#       values: |
#         server:
#           persistentVolume:
#             enabled: true
#             size: 30Gi
#         fluent-bit:
#           enabled: true
#   destination:
#     server: https://kubernetes.default.svc
#     namespace: observability
#   syncPolicy:
#     syncOptions:
#       - Replace=true
#     automated: # Enables automated sync
#       prune: false # Enables pruning of resources not tracked anymore
#       selfHeal: false # Enables self-healing of out-of-sync resources
#   ignoreDifferences:
#     - group: cert-manager.io
#       kind: Certificate
#       jsonPointers:
#         - /spec/duration
#         - /spec/renewBefore
---

