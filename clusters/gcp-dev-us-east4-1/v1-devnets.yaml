# ApplicationSet that creates a devnet for each yaml file in the devnets-configs directory
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: v1-devnets
  namespace: argocd
  labels:
    team: "protocol"
    purpose: "devnets"
    provisioned-by: "protocol"
spec:
  goTemplate: true
  generators:
    - matrix:
        generators:
          - git:
              repoURL: https://github.com/pokt-network/protocol-infra.git
              revision: main
              files:
                - path: devnets-configs/**.yaml

                # devnets-configs/issue-*.yaml are taken care of by `v1-devnets-github-label-e2e-devnet-test ApplicationSet instead`
                # TODO: uncomment when https://github.com/argoproj/applicationset/issues/468 is fixed
                # - path: devnets-configs/issue-*.yaml
                #   exclude: true
          - plugin:
              configMapRef:
                name: networks-parameters-plugin-creds
              input:
                parameters:
                  networkName: "{{.networkName}}"
              # values:
              #   branchLink: "https://git.example.com/org/repo/tree/{{.branch}}"
  template:
    metadata:
      name: "devnet-{{.networkName}}"
      namespace: argocd
      labels:
        team: "protocol"
        purpose: "devnets"
        devnet: "{{.networkName}}"
        provisioned-by: "protocol"
    spec:
      destination:
        name: dev-in-cluster
        namespace: "devnet-{{.networkName}}"
      project: default
      source:
        path: charts/v1-network-base
        repoURL: https://github.com/pokt-network/protocol-infra.git
        targetRevision: main
        helm:
          valueFiles: # Must be in the same repo https://argo-cd.readthedocs.io/en/stable/user-guide/helm/#values-files
            - ../../devnets-configs/{{.networkName}}.yaml
          values: |
            networkName: {{.networkName}}
            global:
              labels:
                team: "protocol"
                purpose: "devnet"
                devnet: "{{.networkName}}"
                provisioned-by: "protocol"
            fishermen:
              count: {{.fishermen.count}}
            full_nodes:
              count: {{.full_nodes.count}}
            servicers:
              count: {{.servicers.count}}
            validators:
              count: {{.validators.count}}

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - Replace=true
          - RespectIgnoreDifferences=true
      ignoreDifferences:
        - jsonPointers:
            - /spec/volumeName
            - /spec/storageClassName
          kind: PersistentVolumeClaim
