apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: testnet-beta-seed1
  namespace: argocd
  labels:
    team: "protocol"
    purpose: "testnets"
    testnet: "beta"
    provisioned-by: "protocol"
spec:
  project: default
  destination:
    namespace: testnet-beta
    server: https://kubernetes.default.svc
  source:
    path: charts/poktrolld
    repoURL: https://github.com/pokt-network/helm-charts.git
    targetRevision: adopt-prod-image # TODO: change to versioned releases when the work on the helm chart is merged/done
    helm:
      values: |
        # Can be created with `kubectl create secret generic seed1-keys --from-file=config/node_key.json --from-file=config/priv_validator_key.json --namespace=testnet-beta`
        nodeKeysSecretName: seed1-keys

        # Can be created with `kubectl create cm testnet-test-genesis --from-file=config/genesis.json --namespace=testnet-beta`
        # Provisioned below
        genesis:
          configMapName: genesis

        replicaCount: 1

        image:
          repository: ghcr.io/pokt-network/poktrolld
          tag: 0.0.11-rc
          pullPolicy: IfNotPresent

        persistence:
          enabled: true
          className: "premium-rwo"
          size: 80Gi

        resources:
          limits:
            memory: 11Gi
            cpu: '4'
          requests:
            memory: 10Gi
            cpu: 3500m

        serviceP2P:
          type: LoadBalancer
          externalTrafficPolicy: Local
          annotations:
            cloud.google.com/neg: '{"ingress":true}'

        config:
          p2p:
            # Seed node peer id: 8b9060703e81129996234350c90f77d6ecddd11c@34.45.40.180:26656
            externalAddress: "34.45.40.180:26656"
            seedMode: true
            persistentPeers: "3b22532b929038d9addaf6f8c4cab1a833f2613e@35.202.2.105:26656"
            # unconditionalPeerIds: "3b22532b929038d9addaf6f8c4cab1a833f2613e"

        serviceMonitor:
          enabled: true

        ingress:
          rpc:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
              nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
              nginx.ingress.kubernetes.io/proxy-body-size: "100m"
              nginx.ingress.kubernetes.io/proxy-buffer-size: "2m"
              nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
              nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "4m"
              nginx.ingress.kubernetes.io/client-body-buffer-size: "4m"
              nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
              nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
              nginx.ingress.kubernetes.io/proxy-buffering: "on"
            hosts:
              - name: shannon-testnet-grove-seed1-rpc.beta.poktroll.com
              - name: shannon-testnet-grove-rpc.beta.poktroll.com
            tls:
              secretName: "beta-wildcard-tls"
          grpc:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
            hosts:
              - name: shannon-testnet-grove-seed1-grpc.beta.poktroll.com
              - name: shannon-testnet-grove-grpc.beta.poktroll.com
            tls:
              secretName: "beta-wildcard-tls"
          api:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
            hosts:
              - name: shannon-testnet-grove-seed1-api.beta.poktroll.com
              - name: shannon-testnet-grove-api.beta.poktroll.com
            tls:
              secretName: "beta-wildcard-tls"

        homeDirectory: /home/pocket/.poktroll
        chownDataDirTo: 1025
        containerSecurityContext:
          runAsUser: 1025
          runAsGroup: 1025
          # fsGroup: 1025

        customConfigsConfigMap:
          enabled: true
          name: custom-configs

        logs:
          format: json
          level: error
