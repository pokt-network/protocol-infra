apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-manager
  labels:
    app: dev-cluster-manager
    {{ with .Values.global.labels }}
      {{ toYaml . | nindent 4 }}
    {{ end }}
  annotations:
    argocd.argoproj.io/sync-options: Replace=true # This is needed to force the redeployment of the validator in volatile (development) environments
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-cluster-manager
  template:
    metadata:
      labels:
        app: dev-cluster-manager
        {{ with .Values.global.labels }}
          {{ toYaml . | nindent 8 }}
        {{ end }}
      annotations:
        argocd.argoproj.io/sync-options: Replace=true # This is needed to force the redeployment of the validator in volatile (development) environments
    spec:
      serviceAccountName: cluster-manager
      containers:
        - name: pocket
          image: "{{ $.Values.image.repository }}:{{ include "dev-image" . }}"
          imagePullPolicy: IfNotPresent
          command: ["cluster-manager"]
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "4"
          env:
          - name: RPC_HOST
            value: pocket-validators
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-manager
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-manager
subjects:
  - kind: ServiceAccount
    name: cluster-manager
    apiGroup: ""
roleRef:
  kind: Role
  name: cluster-manager
  apiGroup: ""
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["validators-private-keys"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["services", "pods"]
    verbs: ["watch", "list", "get"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["delete"]
  - apiGroups: ["apps"]
    resources: ["statefulset"]
    verbs: ["get"]
